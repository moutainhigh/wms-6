<?xml version="1.0" encoding="UTF-8"?>

<sqlMap namespace="investView">

	<sql id="query">
		<![CDATA[
		SELECT
			ip_.investment_pool_id poolId,
			ip_.current_period currentPeriod,
			mra_.transfer_total_amount transferTotalAmount,
			mra_.pay_give_amount payGiveAmount,
			ip_.init_total_amount initTotalAmount,
			ip_.product_id productId,
			mbb_.id_card idCard,
			mbb_.biz_code lenderCode,
			mbb_.biz_cust_code lenderCustCode,
			ip_.interest_begin_time effectTime,
			ip_.trans_time dueTime,
			ip_.bill_day billPort,
			ip_.pay_time payTime,
			ip_.pay_total_amount payAmount
		FROM
			t_match_biz_base mbb_
		LEFT JOIN t_investment_pool ip_ ON mbb_.match_biz_base_id = ip_.match_biz_base_id
		LEFT JOIN (
			SELECT
				SUM(mr_.transfer_total_amount) transfer_total_amount,
				SUM(mr_.pay_give_amount) pay_give_amount,
				mr_.investment_pool_id,
				mr_.current_period
			FROM
				t_match_result mr_
			GROUP BY
				mr_.investment_pool_id,
				mr_.current_period
		) mra_ ON ip_.investment_pool_id = mra_.investment_pool_id
		AND ip_.current_period = mra_.current_period
		WHERE
			mbb_.biz_category = 2
		AND mbb_.biz_code = :lenderCode
		]]>
	</sql>

	<sql id="queryPool">
		<![CDATA[
		SELECT
			mbb_.biz_code lenderCode,
			mbb_.cust_name custName,
			mbb_.biz_id bizId,
			mbb_.id_card idCard,
			ip_.product_id productId,
			ip_.init_total_amount initTotalAmount,
			mbb_.biz_date_begin bizDateBegin,
			mbb_.biz_cust_code lenderCustCode,
			mbb_.cust_address custAddress,
			mbb_.zip_code zipCode,
			mbb_.email email,
			mbb_.mobile mobile,
			ip_.bill_day billPort,
			ip_.init_match_time date
		FROM
			t_investment_pool ip_
		LEFT JOIN t_match_biz_base mbb_ ON ip_.match_biz_base_id = mbb_.match_biz_base_id
		WHERE
			ip_.init_match_time IS NOT NULL
		<#if idCard?exists && idCard!="">
			AND	mbb_.id_card = :idCard
		</#if>
		<#if lenderCode?exists && lenderCode!="">
			AND mbb_.biz_code = :lenderCode
		</#if>
		<#if initMatchDateBegin?exists && initMatchDateBegin!="">
			AND ip_.init_match_time >= :initMatchDateBegin
		</#if>
		<#if initMatchDateEnd?exists && initMatchDateEnd!="">
			AND ip_.init_match_time <= :initMatchDateEnd
		</#if>
		ORDER BY
			ip_.init_match_time DESC
		]]>
	</sql>
	<sql id="queryStat">
		<![CDATA[
		SELECT
			COUNT(ip_.investment_pool_id) num,
			SUM(ip_.init_total_amount) amount,
			DATE_FORMAT(ip_.init_match_time, '%Y-%m-%d') date
		FROM
			t_investment_pool ip_
		WHERE
			ip_.init_match_time IS NOT NULL
		<#if initMatchDateBegin?exists && initMatchDateBegin!="">
			AND ip_.init_match_time >= :initMatchDateBegin
		</#if>
		<#if initMatchDateEnd?exists && initMatchDateEnd!="">
			AND ip_.init_match_time <= :initMatchDateEnd
		</#if>	
		GROUP BY
			DATE_FORMAT(ip_.init_match_time, '%Y-%m-%d')
		ORDER BY
			DATE_FORMAT(ip_.init_match_time, '%Y-%m-%d') DESC
		]]>
	</sql>
	<sql id="queryProduct">
		<![CDATA[
			SELECT
				ip_.investment_pool_id poolId,
				mbb_.cust_name custName,
				mbb_.biz_code lenderCode,
				mbb_.biz_cust_code lenderCustCode,
				mbb_.id_card idCard,
				ip_.init_total_amount initTotalAmount,
				ip_.product_id productId,
				ip_.current_total_amount currentTotalAmount,
				ip_.init_match_time date,
				ip_.bill_day billDay,
				ip_.interest_begin_time interestBeginTime
			FROM
				t_investment_pool ip_
			LEFT JOIN t_match_biz_base mbb_ ON ip_.match_biz_base_id = mbb_.match_biz_base_id
			WHERE
				ip_.product_id IN (11, 12)
			AND ip_.data_status NOT IN ('T', 'F', 'D', 'O')
			<#if custName?exists && custName!="">
			AND mbb_.cust_name = :custName
			</#if>
			<#if lenderCode?exists && lenderCode!="">
			AND mbb_.biz_code = :lenderCode
			</#if>
		]]>
	</sql>
	<sql id="updateProduct">
		<![CDATA[
		UPDATE 
			t_investment_pool
		SET 
			product_id = :productId
		WHERE
			investment_pool_id = :poolId	
		]]>
	</sql>
</sqlMap>	